name: Build and Deploy Spring Boot App

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # --- Copy source ---
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # --- Java 25 ---
      - name: Set up Java 25
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '25'
          cache: maven

      # --- Maven 3.9.9 ---
      - name: Set up Maven 3.9.9
        uses: s4u/setup-maven-action@v1.14.0
        with:
          maven-version: '3.9.9'

      # --- GitVersion ---
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v2
        with:
          versionSpec: '5.x'

      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v2

      # --- Build Spring Boot app ---
      - name: Build with Maven
        run: mvn -B clean package -DskipTests -Drevision=${{ steps.gitversion.outputs.fullSemVer }}

      # --- Prepare SSH ---
      - name: Prepare SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      # --- Deploy to server  ---
      - name: Deploy build via rsync
        run: |
          VERSION=${{ steps.gitversion.outputs.fullSemVer }}
          BUILD_JAR=$(find target -name "*.jar" | head -n 1)

          echo "Deploying version: $VERSION"
          echo "Uploading $BUILD_JAR"

          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            mkdir -p '${{ secrets.WORK_DIR }}/$VERSION';
            ln -sfn '$VERSION' '${{ secrets.WORK_DIR }}/latest';
          "

          rsync -avz "$BUILD_JAR" ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.WORK_DIR }}/$VERSION/
     
     # --- Restart app on server
      - name: Restart app on server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            "sudo systemctl restart chatgpt.service"

      # --- Remove keys ---
      - name: Cleanup SSH
        run: rm -rf ~/.ssh
